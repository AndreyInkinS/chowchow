{"version":3,"sources":["../node_modules/gsap/utils/paths.js","../node_modules/gsap/CustomEase.js","store/index.js","components/placeholders/placeholders.js","components/slider/slider.js","../node_modules/object-assign/index.js","../node_modules/tiny-emitter/index.js","../node_modules/lethargy/lethargy.js","../node_modules/virtual-scroll/src/support.js","../node_modules/virtual-scroll/src/clone.js","../node_modules/bindall-standalone/index.js","../node_modules/virtual-scroll/src/index.js","utils/math.js","utils/scroll.js","components/animation/gallery.js"],"names":["_bestDistance","_svgPathExp","_numbersExp","_scientific","_selectorExp","_DEG2RAD","Math","PI","_RAD2DEG","_sin","sin","_cos","cos","_abs","abs","_sqrt","sqrt","_atan2","atan2","_largeNum","_isString","value","_isNumber","_isUndefined","_temp","_temp2","_roundingNum","_wrapProgress","progress","round","_round","_splitSegment","rawPath","segIndex","i","t","segment","shift","subdivideSegment","length","splice","slice","_reverseRawPath","skipOuter","reverse","reversed","reverseSegment","_copyMetaData","source","copy","totalLength","samples","lookup","minLength","resolution","totalPoints","_appendOrMerge","index","prevSeg","l","concat","getRawPath","e","test","document","querySelector","getAttribute","_gsPath","_dirty","stringToRawPath","console","warn","copyRawPath","a","y","_createPath","ignore","name","path","createElementNS","attr","call","attributes","nodeName","toLowerCase","indexOf","setAttributeNS","nodeValue","_typeAttrs","rect","circle","ellipse","line","_attrToObj","attrs","props","split","obj","convertToPath","element","swap","data","x","r","ry","rcirc","rycirc","points","w","h","x2","x3","x4","x5","x6","y2","y3","y4","y5","y6","type","tagName","circ","getBBox","rx","width","height","join","cx","cy","x1","y1","match","setAttribute","rawPathToString","_gsRawPath","parentNode","insertBefore","removeChild","getRotationAtProgress","d","getProgressData","getRotationAtBezierT","b","c","sliceRawPath","start","end","loops","max","offset","min","sShift","eShift","totalSegments","j","cacheRawPathMeasurements","wrap","s","eSeg","sSeg","eSegIndex","sSegIndex","ei","si","sameSegment","sameBezier","invertedOrder","angle","push","measureSegment","startIndex","bezierQty","xd","xd1","yd","yd1","inv","lengthIndex","segLength","inc","endIndex","samplesIndex","prevLength","pathLength","ax","ay","cp1x","cp1y","cp2x","cp2y","x1a","y1a","x2a","y2a","decoratee","pushToNextIfAtEnd","getPositionOnPath","includeAngle","point","result","transformRawPath","tx","ty","arcToSegment","lastX","lastY","largeArcFlag","sweepFlag","angleRad","cosAngle","sinAngle","TWOPI","dx2","dy2","x1_sq","y1_sq","radiiCheck","rx_sq","ry_sq","sq","coef","cx1","cy1","ux","uy","vx","vy","temp","angleStart","acos","angleExtent","isNaN","segments","ceil","angleIncrement","controlLength","ma","mb","mc","md","command","isRelative","startX","startY","difX","difY","beziers","prevCommand","flag1","flag2","replace","m","n","relativeX","relativeY","elements","errorMessage","sx","sy","ex","ey","log","toUpperCase","closed","substr","charAt","pop","bezierToPoints","threshold","x12","y12","x23","y23","x34","y34","x123","y123","x234","y234","x1234","y1234","dx","dy","d2","d3","flatPointsToSegment","curviness","pointsToSegment","cornerThreshold","prevX","prevY","slope","dx1","dx3","dy1","dy3","d1","nextX","nextY","unshift","pointToSegDist","pow","simplifyStep","first","last","tolerance","simplified","maxSqDist","firstX","firstY","simplifyPoints","parseFloat","getClosestProgressOnBezier","iterations","px","py","slices","x0","y0","best","getClosestData","closest","bestDistance","subdivideSegmentNear","bestT","bestSegmentIndex","sl","gsap","_coreInitted","_getGSAP","window","registerPlugin","_initCore","registerEase","CustomEase","create","_bigNum","_bonusValidated","_numExp","_needsParsingExp","_findMinimum","values","_normalize","originY","_bezierToPoints","id","config","setData","_proto","prototype","a1","a2","prevPoint","p","precision","fast","nx","ease","custom","getSVGData","register","core","get","parseEase","utils","toArray","invert","version","constants","isDevice","instances","scroll","undefined","slider","Placeholders","state","animating","setExpandAnimation","dom","scrollEnabled","setTimeout","open","enable","disable","handleClick","Slider","scrollLast","items","forEach","item","bounds","innerWidth","left","right","percentage","newMin","img","style","transform","tl","timeline","paused","addLabel","set","el","autoAlpha","container","scrollLeft","current","play","getBoundingClientRect","top","innerHeight","onComplete","to","duration","stagger","each","from","content","setCache","querySelectorAll","images","headings","addEventListener","handleResize","ticker","add","render","addListeners","getOwnPropertySymbols","Object","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","toObject","val","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","fromCharCode","map","test3","letter","keys","err","module","exports","target","symbols","arguments","key","lerp","clamp","Scroll","options","deltaY","dragging","dragEnd","body","classList","remove","dragStart","clientX","dragSpeed","vs","VirtualScroll","mouseMultiplier","native","on","calc","smooth","off","passive","handleMouseup","handleMousedown","handleMouseleave","handleMousemove","removeEventListener","destroy","removeListeners","startGalleryAnimation","documentElement","setProperty","init","placeholders","scrollHandler","evt","preventDefault","enableScroll","disableScroll"],"mappings":"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","file":"gallery.caceafe2.js","sourceRoot":"../src","sourcesContent":["/*!\n * paths 3.4.0\n * https://greensock.com\n *\n * Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar _svgPathExp = /[achlmqstvz]|(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n    _numbersExp = /(?:(-)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n    _scientific = /[\\+\\-]?\\d*\\.?\\d+e[\\+\\-]?\\d+/ig,\n    _selectorExp = /(^[#\\.][a-z]|[a-y][a-z])/i,\n    _DEG2RAD = Math.PI / 180,\n    _RAD2DEG = 180 / Math.PI,\n    _sin = Math.sin,\n    _cos = Math.cos,\n    _abs = Math.abs,\n    _sqrt = Math.sqrt,\n    _atan2 = Math.atan2,\n    _largeNum = 1e8,\n    _isString = function _isString(value) {\n  return typeof value === \"string\";\n},\n    _isNumber = function _isNumber(value) {\n  return typeof value === \"number\";\n},\n    _isUndefined = function _isUndefined(value) {\n  return typeof value === \"undefined\";\n},\n    _temp = {},\n    _temp2 = {},\n    _roundingNum = 1e5,\n    _wrapProgress = function _wrapProgress(progress) {\n  return Math.round((progress + _largeNum) % 1 * _roundingNum) / _roundingNum || (progress < 0 ? 0 : 1);\n},\n    //if progress lands on 1, the % will make it 0 which is why we || 1, but not if it's negative because it makes more sense for motion to end at 0 in that case.\n_round = function _round(value) {\n  return Math.round(value * _roundingNum) / _roundingNum || 0;\n},\n    _splitSegment = function _splitSegment(rawPath, segIndex, i, t) {\n  var segment = rawPath[segIndex],\n      shift = t === 1 ? 6 : subdivideSegment(segment, i, t);\n\n  if (shift && shift + i + 2 < segment.length) {\n    rawPath.splice(segIndex, 0, segment.slice(0, i + shift + 2));\n    segment.splice(0, i + shift);\n    return 1;\n  }\n},\n    _reverseRawPath = function _reverseRawPath(rawPath, skipOuter) {\n  var i = rawPath.length;\n\n  if (!skipOuter) {\n    rawPath.reverse();\n  }\n\n  while (i--) {\n    if (!rawPath[i].reversed) {\n      reverseSegment(rawPath[i]);\n    }\n  }\n},\n    _copyMetaData = function _copyMetaData(source, copy) {\n  copy.totalLength = source.totalLength;\n\n  if (source.samples) {\n    //segment\n    copy.samples = source.samples.slice(0);\n    copy.lookup = source.lookup.slice(0);\n    copy.minLength = source.minLength;\n    copy.resolution = source.resolution;\n  } else {\n    //rawPath\n    copy.totalPoints = source.totalPoints;\n  }\n\n  return copy;\n},\n    //pushes a new segment into a rawPath, but if its starting values match the ending values of the last segment, it'll merge it into that same segment (to reduce the number of segments)\n_appendOrMerge = function _appendOrMerge(rawPath, segment) {\n  var index = rawPath.length,\n      prevSeg = rawPath[index - 1] || [],\n      l = prevSeg.length;\n\n  if (segment[0] === prevSeg[l - 2] && segment[1] === prevSeg[l - 1]) {\n    segment = prevSeg.concat(segment.slice(2));\n    index--;\n  }\n\n  rawPath[index] = segment;\n},\n    _bestDistance;\n/* TERMINOLOGY\n - RawPath - an array of arrays, one for each Segment. A single RawPath could have multiple \"M\" commands, defining Segments (paths aren't always connected).\n - Segment - an array containing a sequence of Cubic Bezier coordinates in alternating x, y, x, y format. Starting anchor, then control point 1, control point 2, and ending anchor, then the next control point 1, control point 2, anchor, etc. Uses less memory than an array with a bunch of {x, y} points.\n - Bezier - a single cubic Bezier with a starting anchor, two control points, and an ending anchor.\n - the variable \"t\" is typically the position along an individual Bezier path (time) and it's NOT linear, meaning it could accelerate/decelerate based on the control points whereas the \"p\" or \"progress\" value is linearly mapped to the whole path, so it shouldn't really accelerate/decelerate based on control points. So a progress of 0.2 would be almost exactly 20% along the path. \"t\" is ONLY in an individual Bezier piece.\n */\n//accepts basic selector text, a path instance, a RawPath instance, or a Segment and returns a RawPath (makes it easy to homogenize things). If an element or selector text is passed in, it'll also cache the value so that if it's queried again, it'll just take the path data from there instead of parsing it all over again (as long as the path data itself hasn't changed - it'll check).\n\n\nexport function getRawPath(value) {\n  value = _isString(value) && _selectorExp.test(value) ? document.querySelector(value) || value : value;\n  var e = value.getAttribute ? value : 0,\n      rawPath;\n\n  if (e && (value = value.getAttribute(\"d\"))) {\n    //implements caching\n    if (!e._gsPath) {\n      e._gsPath = {};\n    }\n\n    rawPath = e._gsPath[value];\n    return rawPath && !rawPath._dirty ? rawPath : e._gsPath[value] = stringToRawPath(value);\n  }\n\n  return !value ? console.warn(\"Expecting a <path> element or an SVG path data string\") : _isString(value) ? stringToRawPath(value) : _isNumber(value[0]) ? [value] : value;\n} //copies a RawPath WITHOUT the length meta data (for speed)\n\nexport function copyRawPath(rawPath) {\n  var a = [],\n      i = 0;\n\n  for (; i < rawPath.length; i++) {\n    a[i] = _copyMetaData(rawPath[i], rawPath[i].slice(0));\n  }\n\n  return _copyMetaData(rawPath, a);\n}\nexport function reverseSegment(segment) {\n  var i = 0,\n      y;\n  segment.reverse(); //this will invert the order y, x, y, x so we must flip it back.\n\n  for (; i < segment.length; i += 2) {\n    y = segment[i];\n    segment[i] = segment[i + 1];\n    segment[i + 1] = y;\n  }\n\n  segment.reversed = !segment.reversed;\n}\n\nvar _createPath = function _createPath(e, ignore) {\n  var path = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\"),\n      attr = [].slice.call(e.attributes),\n      i = attr.length,\n      name;\n  ignore = \",\" + ignore + \",\";\n\n  while (--i > -1) {\n    name = attr[i].nodeName.toLowerCase(); //in Microsoft Edge, if you don't set the attribute with a lowercase name, it doesn't render correctly! Super weird.\n\n    if (ignore.indexOf(\",\" + name + \",\") < 0) {\n      path.setAttributeNS(null, name, attr[i].nodeValue);\n    }\n  }\n\n  return path;\n},\n    _typeAttrs = {\n  rect: \"rx,ry,x,y,width,height\",\n  circle: \"r,cx,cy\",\n  ellipse: \"rx,ry,cx,cy\",\n  line: \"x1,x2,y1,y2\"\n},\n    _attrToObj = function _attrToObj(e, attrs) {\n  var props = attrs ? attrs.split(\",\") : [],\n      obj = {},\n      i = props.length;\n\n  while (--i > -1) {\n    obj[props[i]] = +e.getAttribute(props[i]) || 0;\n  }\n\n  return obj;\n}; //converts an SVG shape like <circle>, <rect>, <polygon>, <polyline>, <ellipse>, etc. to a <path>, swapping it in and copying the attributes to match.\n\n\nexport function convertToPath(element, swap) {\n  var type = element.tagName.toLowerCase(),\n      circ = 0.552284749831,\n      data,\n      x,\n      y,\n      r,\n      ry,\n      path,\n      rcirc,\n      rycirc,\n      points,\n      w,\n      h,\n      x2,\n      x3,\n      x4,\n      x5,\n      x6,\n      y2,\n      y3,\n      y4,\n      y5,\n      y6,\n      attr;\n\n  if (type === \"path\" || !element.getBBox) {\n    return element;\n  }\n\n  path = _createPath(element, \"x,y,width,height,cx,cy,rx,ry,r,x1,x2,y1,y2,points\");\n  attr = _attrToObj(element, _typeAttrs[type]);\n\n  if (type === \"rect\") {\n    r = attr.rx;\n    ry = attr.ry || r;\n    x = attr.x;\n    y = attr.y;\n    w = attr.width - r * 2;\n    h = attr.height - ry * 2;\n\n    if (r || ry) {\n      //if there are rounded corners, render cubic beziers\n      x2 = x + r * (1 - circ);\n      x3 = x + r;\n      x4 = x3 + w;\n      x5 = x4 + r * circ;\n      x6 = x4 + r;\n      y2 = y + ry * (1 - circ);\n      y3 = y + ry;\n      y4 = y3 + h;\n      y5 = y4 + ry * circ;\n      y6 = y4 + ry;\n      data = \"M\" + x6 + \",\" + y3 + \" V\" + y4 + \" C\" + [x6, y5, x5, y6, x4, y6, x4 - (x4 - x3) / 3, y6, x3 + (x4 - x3) / 3, y6, x3, y6, x2, y6, x, y5, x, y4, x, y4 - (y4 - y3) / 3, x, y3 + (y4 - y3) / 3, x, y3, x, y2, x2, y, x3, y, x3 + (x4 - x3) / 3, y, x4 - (x4 - x3) / 3, y, x4, y, x5, y, x6, y2, x6, y3].join(\",\") + \"z\";\n    } else {\n      data = \"M\" + (x + w) + \",\" + y + \" v\" + h + \" h\" + -w + \" v\" + -h + \" h\" + w + \"z\";\n    }\n  } else if (type === \"circle\" || type === \"ellipse\") {\n    if (type === \"circle\") {\n      r = ry = attr.r;\n      rycirc = r * circ;\n    } else {\n      r = attr.rx;\n      ry = attr.ry;\n      rycirc = ry * circ;\n    }\n\n    x = attr.cx;\n    y = attr.cy;\n    rcirc = r * circ;\n    data = \"M\" + (x + r) + \",\" + y + \" C\" + [x + r, y + rycirc, x + rcirc, y + ry, x, y + ry, x - rcirc, y + ry, x - r, y + rycirc, x - r, y, x - r, y - rycirc, x - rcirc, y - ry, x, y - ry, x + rcirc, y - ry, x + r, y - rycirc, x + r, y].join(\",\") + \"z\";\n  } else if (type === \"line\") {\n    data = \"M\" + attr.x1 + \",\" + attr.y1 + \" L\" + attr.x2 + \",\" + attr.y2; //previously, we just converted to \"Mx,y Lx,y\" but Safari has bugs that cause that not to render properly when using a stroke-dasharray that's not fully visible! Using a cubic bezier fixes that issue.\n  } else if (type === \"polyline\" || type === \"polygon\") {\n    points = (element.getAttribute(\"points\") + \"\").match(_numbersExp) || [];\n    x = points.shift();\n    y = points.shift();\n    data = \"M\" + x + \",\" + y + \" L\" + points.join(\",\");\n\n    if (type === \"polygon\") {\n      data += \",\" + x + \",\" + y + \"z\";\n    }\n  }\n\n  path.setAttribute(\"d\", rawPathToString(path._gsRawPath = stringToRawPath(data)));\n\n  if (swap && element.parentNode) {\n    element.parentNode.insertBefore(path, element);\n    element.parentNode.removeChild(element);\n  }\n\n  return path;\n} //returns the rotation (in degrees) at a particular progress on a rawPath (the slope of the tangent)\n\nexport function getRotationAtProgress(rawPath, progress) {\n  var d = getProgressData(rawPath, progress >= 1 ? 1 - 1e-9 : progress ? progress : 1e-9);\n  return getRotationAtBezierT(d.segment, d.i, d.t);\n}\n\nfunction getRotationAtBezierT(segment, i, t) {\n  var a = segment[i],\n      b = segment[i + 2],\n      c = segment[i + 4],\n      x;\n  a += (b - a) * t;\n  b += (c - b) * t;\n  a += (b - a) * t;\n  x = b + (c + (segment[i + 6] - c) * t - b) * t - a;\n  a = segment[i + 1];\n  b = segment[i + 3];\n  c = segment[i + 5];\n  a += (b - a) * t;\n  b += (c - b) * t;\n  a += (b - a) * t;\n  return _round(_atan2(b + (c + (segment[i + 7] - c) * t - b) * t - a, x) * _RAD2DEG);\n}\n\nexport function sliceRawPath(rawPath, start, end) {\n  if (_isUndefined(end)) {\n    end = 1;\n  }\n\n  start = start || 0;\n  var reverse = start > end,\n      loops = Math.max(0, ~~(_abs(end - start) - 1e-8));\n\n  if (reverse) {\n    reverse = end;\n    end = start;\n    start = reverse;\n    reverse = 1;\n    loops -= loops ? 1 : 0;\n  }\n\n  if (start < 0 || end < 0) {\n    var offset = ~~Math.min(start, end) + 1;\n    start += offset;\n    end += offset;\n  }\n\n  var path = copyRawPath(rawPath.totalLength ? rawPath : cacheRawPathMeasurements(rawPath)),\n      wrap = end > 1,\n      s = getProgressData(path, start, _temp, true),\n      e = getProgressData(path, end, _temp2),\n      eSeg = e.segment,\n      sSeg = s.segment,\n      eSegIndex = e.segIndex,\n      sSegIndex = s.segIndex,\n      ei = e.i,\n      si = s.i,\n      sameSegment = sSegIndex === eSegIndex,\n      sameBezier = ei === si && sameSegment,\n      invertedOrder = sameSegment && si > ei || sameBezier && s.t > e.t,\n      sShift,\n      eShift,\n      i,\n      copy,\n      totalSegments,\n      l,\n      j;\n\n  if (wrap || loops) {\n    if (_splitSegment(path, sSegIndex, si, s.t)) {\n      sShift = 1;\n      sSegIndex++;\n\n      if (sameBezier) {\n        if (invertedOrder) {\n          e.t /= s.t;\n        } else {\n          e.t = (e.t - s.t) / (1 - s.t);\n          eSegIndex++;\n          ei = 0;\n        }\n      } else if (sSegIndex <= eSegIndex + 1 && !invertedOrder) {\n        eSegIndex++;\n\n        if (sameSegment) {\n          ei -= si;\n        }\n      }\n    }\n\n    if (!e.t) {\n      eSegIndex--;\n\n      if (reverse) {\n        sSegIndex--;\n      }\n    } else if (_splitSegment(path, eSegIndex, ei, e.t)) {\n      if (invertedOrder && sShift) {\n        sSegIndex++;\n      }\n\n      if (reverse) {\n        eSegIndex++;\n      }\n    }\n\n    copy = [];\n    totalSegments = path.length;\n    l = 1 + totalSegments * loops;\n    j = sSegIndex;\n\n    if (reverse) {\n      eSegIndex = (eSegIndex || totalSegments) - 1;\n      l += (totalSegments - eSegIndex + sSegIndex) % totalSegments;\n\n      for (i = 0; i < l; i++) {\n        _appendOrMerge(copy, path[j]);\n\n        j = (j || totalSegments) - 1;\n      }\n    } else {\n      l += (totalSegments - sSegIndex + eSegIndex) % totalSegments;\n\n      for (i = 0; i < l; i++) {\n        _appendOrMerge(copy, path[j++ % totalSegments]);\n      }\n    }\n\n    path = copy;\n  } else {\n    eShift = e.t === 1 ? 6 : subdivideSegment(eSeg, ei, e.t);\n\n    if (start !== end) {\n      sShift = subdivideSegment(sSeg, si, sameBezier ? s.t / e.t : s.t);\n\n      if (sameSegment) {\n        eShift += sShift;\n      }\n\n      eSeg.splice(ei + eShift + 2);\n\n      if (sShift || si) {\n        sSeg.splice(0, si + sShift);\n      }\n\n      i = path.length;\n\n      while (i--) {\n        //chop off any extra segments\n        if (i < sSegIndex || i > eSegIndex) {\n          path.splice(i, 1);\n        }\n      }\n    } else {\n      eSeg.angle = getRotationAtBezierT(eSeg, ei + eShift, 0); //record the value before we chop because it'll be impossible to determine the angle after its length is 0!\n\n      ei += eShift;\n      s = eSeg[ei];\n      e = eSeg[ei + 1];\n      eSeg.length = eSeg.totalLength = 0;\n      eSeg.totalPoints = path.totalPoints = 8;\n      eSeg.push(s, e, s, e, s, e, s, e);\n    }\n  }\n\n  if (reverse) {\n    _reverseRawPath(path, wrap || loops);\n  }\n\n  path.totalLength = 0;\n  return path;\n} //measures a Segment according to its resolution (so if segment.resolution is 6, for example, it'll take 6 samples equally across each Bezier) and create/populate a \"samples\" array that has the length up to each of those sample points (always increasing from the start) as well as a \"lookup\" array that's broken up according to the smallest distance between 2 samples. This gives us a very fast way of looking up a progress position rather than looping through all the points/Beziers. You can optionally have it only measure a subset, starting at startIndex and going for a specific number of beziers (remember, there are 3 x/y pairs each, for a total of 6 elements for each Bezier). It will also populate a \"totalLength\" property, but that's not generally super accurate because by default it'll only take 6 samples per Bezier. But for performance reasons, it's perfectly adequate for measuring progress values along the path. If you need a more accurate totalLength, either increase the resolution or use the more advanced bezierToPoints() method which keeps adding points until they don't deviate by more than a certain precision value.\n\nfunction measureSegment(segment, startIndex, bezierQty) {\n  startIndex = startIndex || 0;\n\n  if (!segment.samples) {\n    segment.samples = [];\n    segment.lookup = [];\n  }\n\n  var resolution = ~~segment.resolution || 12,\n      inc = 1 / resolution,\n      endIndex = bezierQty ? startIndex + bezierQty * 6 + 1 : segment.length,\n      x1 = segment[startIndex],\n      y1 = segment[startIndex + 1],\n      samplesIndex = startIndex ? startIndex / 6 * resolution : 0,\n      samples = segment.samples,\n      lookup = segment.lookup,\n      min = (startIndex ? segment.minLength : _largeNum) || _largeNum,\n      prevLength = samples[samplesIndex + bezierQty * resolution - 1],\n      length = startIndex ? samples[samplesIndex - 1] : 0,\n      i,\n      j,\n      x4,\n      x3,\n      x2,\n      xd,\n      xd1,\n      y4,\n      y3,\n      y2,\n      yd,\n      yd1,\n      inv,\n      t,\n      lengthIndex,\n      l,\n      segLength;\n  samples.length = lookup.length = 0;\n\n  for (j = startIndex + 2; j < endIndex; j += 6) {\n    x4 = segment[j + 4] - x1;\n    x3 = segment[j + 2] - x1;\n    x2 = segment[j] - x1;\n    y4 = segment[j + 5] - y1;\n    y3 = segment[j + 3] - y1;\n    y2 = segment[j + 1] - y1;\n    xd = xd1 = yd = yd1 = 0;\n\n    if (_abs(x4) < 1e-5 && _abs(y4) < 1e-5 && _abs(x2) + _abs(y2) < 1e-5) {\n      //dump points that are sufficiently close (basically right on top of each other, making a bezier super tiny or 0 length)\n      if (segment.length > 8) {\n        segment.splice(j, 6);\n        j -= 6;\n        endIndex -= 6;\n      }\n    } else {\n      for (i = 1; i <= resolution; i++) {\n        t = inc * i;\n        inv = 1 - t;\n        xd = xd1 - (xd1 = (t * t * x4 + 3 * inv * (t * x3 + inv * x2)) * t);\n        yd = yd1 - (yd1 = (t * t * y4 + 3 * inv * (t * y3 + inv * y2)) * t);\n        l = _sqrt(yd * yd + xd * xd);\n\n        if (l < min) {\n          min = l;\n        }\n\n        length += l;\n        samples[samplesIndex++] = length;\n      }\n    }\n\n    x1 += x4;\n    y1 += y4;\n  }\n\n  if (prevLength) {\n    prevLength -= length;\n\n    for (; samplesIndex < samples.length; samplesIndex++) {\n      samples[samplesIndex] += prevLength;\n    }\n  }\n\n  if (samples.length && min) {\n    segment.totalLength = segLength = samples[samples.length - 1] || 0;\n    segment.minLength = min;\n    l = lengthIndex = 0;\n\n    for (i = 0; i < segLength; i += min) {\n      lookup[l++] = samples[lengthIndex] < i ? ++lengthIndex : lengthIndex;\n    }\n  } else {\n    segment.totalLength = samples[0] = 0;\n  }\n\n  return startIndex ? length - samples[startIndex / 2 - 1] : length;\n}\n\nexport function cacheRawPathMeasurements(rawPath, resolution) {\n  var pathLength, points, i;\n\n  for (i = pathLength = points = 0; i < rawPath.length; i++) {\n    rawPath[i].resolution = ~~resolution || 12; //steps per Bezier curve (anchor, 2 control points, to anchor)\n\n    points += rawPath[i].length;\n    pathLength += measureSegment(rawPath[i]);\n  }\n\n  rawPath.totalPoints = points;\n  rawPath.totalLength = pathLength;\n  return rawPath;\n} //divide segment[i] at position t (value between 0 and 1, progress along that particular cubic bezier segment that starts at segment[i]). Returns how many elements were spliced into the segment array (either 0 or 6)\n\nexport function subdivideSegment(segment, i, t) {\n  if (t <= 0 || t >= 1) {\n    return 0;\n  }\n\n  var ax = segment[i],\n      ay = segment[i + 1],\n      cp1x = segment[i + 2],\n      cp1y = segment[i + 3],\n      cp2x = segment[i + 4],\n      cp2y = segment[i + 5],\n      bx = segment[i + 6],\n      by = segment[i + 7],\n      x1a = ax + (cp1x - ax) * t,\n      x2 = cp1x + (cp2x - cp1x) * t,\n      y1a = ay + (cp1y - ay) * t,\n      y2 = cp1y + (cp2y - cp1y) * t,\n      x1 = x1a + (x2 - x1a) * t,\n      y1 = y1a + (y2 - y1a) * t,\n      x2a = cp2x + (bx - cp2x) * t,\n      y2a = cp2y + (by - cp2y) * t;\n  x2 += (x2a - x2) * t;\n  y2 += (y2a - y2) * t;\n  segment.splice(i + 2, 4, _round(x1a), //first control point\n  _round(y1a), _round(x1), //second control point\n  _round(y1), _round(x1 + (x2 - x1) * t), //new fabricated anchor on line\n  _round(y1 + (y2 - y1) * t), _round(x2), //third control point\n  _round(y2), _round(x2a), //fourth control point\n  _round(y2a));\n  segment.samples && segment.samples.splice(i / 6 * segment.resolution | 0, 0, 0, 0, 0, 0, 0, 0);\n  return 6;\n} // returns an object {path, segment, segIndex, i, t}\n\nfunction getProgressData(rawPath, progress, decoratee, pushToNextIfAtEnd) {\n  decoratee = decoratee || {};\n  rawPath.totalLength || cacheRawPathMeasurements(rawPath);\n\n  if (progress < 0 || progress > 1) {\n    progress = _wrapProgress(progress);\n  }\n\n  var segIndex = 0,\n      segment = rawPath[0],\n      samples,\n      resolution,\n      length,\n      min,\n      max,\n      i,\n      t;\n\n  if (rawPath.length > 1) {\n    //speed optimization: most of the time, there's only one segment so skip the recursion.\n    length = rawPath.totalLength * progress;\n    max = i = 0;\n\n    while ((max += rawPath[i++].totalLength) < length) {\n      segIndex = i;\n    }\n\n    segment = rawPath[segIndex];\n    min = max - segment.totalLength;\n    progress = (length - min) / (max - min) || 0;\n  }\n\n  samples = segment.samples;\n  resolution = segment.resolution; //how many samples per cubic bezier chunk\n\n  length = segment.totalLength * progress;\n  i = segment.lookup[~~(length / segment.minLength)] || 0;\n  min = i ? samples[i - 1] : 0;\n  max = samples[i];\n\n  if (max < length) {\n    min = max;\n    max = samples[++i];\n  }\n\n  t = 1 / resolution * ((length - min) / (max - min) + i % resolution);\n  i = ~~(i / resolution) * 6;\n\n  if (pushToNextIfAtEnd && t === 1) {\n    if (i + 6 < segment.length) {\n      i += 6;\n      t = 0;\n    } else if (segIndex + 1 < rawPath.length) {\n      i = t = 0;\n      segment = rawPath[++segIndex];\n    }\n  }\n\n  decoratee.t = t;\n  decoratee.i = i;\n  decoratee.path = rawPath;\n  decoratee.segment = segment;\n  decoratee.segIndex = segIndex;\n  return decoratee;\n}\n\nexport function getPositionOnPath(rawPath, progress, includeAngle, point) {\n  var segment = rawPath[0],\n      result = point || {},\n      samples,\n      resolution,\n      length,\n      min,\n      max,\n      i,\n      t,\n      a,\n      inv;\n\n  if (progress < 0 || progress > 1) {\n    progress = _wrapProgress(progress);\n  }\n\n  if (rawPath.length > 1) {\n    //speed optimization: most of the time, there's only one segment so skip the recursion.\n    length = rawPath.totalLength * progress;\n    max = i = 0;\n\n    while ((max += rawPath[i++].totalLength) < length) {\n      segment = rawPath[i];\n    }\n\n    min = max - segment.totalLength;\n    progress = (length - min) / (max - min) || 0;\n  }\n\n  samples = segment.samples;\n  resolution = segment.resolution;\n  length = segment.totalLength * progress;\n  i = segment.lookup[~~(length / segment.minLength)] || 0;\n  min = i ? samples[i - 1] : 0;\n  max = samples[i];\n\n  if (max < length) {\n    min = max;\n    max = samples[++i];\n  }\n\n  t = 1 / resolution * ((length - min) / (max - min) + i % resolution) || 0;\n  inv = 1 - t;\n  i = ~~(i / resolution) * 6;\n  a = segment[i];\n  result.x = _round((t * t * (segment[i + 6] - a) + 3 * inv * (t * (segment[i + 4] - a) + inv * (segment[i + 2] - a))) * t + a);\n  result.y = _round((t * t * (segment[i + 7] - (a = segment[i + 1])) + 3 * inv * (t * (segment[i + 5] - a) + inv * (segment[i + 3] - a))) * t + a);\n\n  if (includeAngle) {\n    result.angle = segment.totalLength ? getRotationAtBezierT(segment, i, t >= 1 ? 1 - 1e-9 : t ? t : 1e-9) : segment.angle || 0;\n  }\n\n  return result;\n} //applies a matrix transform to RawPath (or a segment in a RawPath) and returns whatever was passed in (it transforms the values in the array(s), not a copy).\n\nexport function transformRawPath(rawPath, a, b, c, d, tx, ty) {\n  var j = rawPath.length,\n      segment,\n      l,\n      i,\n      x,\n      y;\n\n  while (--j > -1) {\n    segment = rawPath[j];\n    l = segment.length;\n\n    for (i = 0; i < l; i += 2) {\n      x = segment[i];\n      y = segment[i + 1];\n      segment[i] = x * a + y * c + tx;\n      segment[i + 1] = x * b + y * d + ty;\n    }\n  }\n\n  rawPath._dirty = 1;\n  return rawPath;\n} // translates SVG arc data into a segment (cubic beziers). Angle is in degrees.\n\nfunction arcToSegment(lastX, lastY, rx, ry, angle, largeArcFlag, sweepFlag, x, y) {\n  if (lastX === x && lastY === y) {\n    return;\n  }\n\n  rx = _abs(rx);\n  ry = _abs(ry);\n\n  var angleRad = angle % 360 * _DEG2RAD,\n      cosAngle = _cos(angleRad),\n      sinAngle = _sin(angleRad),\n      PI = Math.PI,\n      TWOPI = PI * 2,\n      dx2 = (lastX - x) / 2,\n      dy2 = (lastY - y) / 2,\n      x1 = cosAngle * dx2 + sinAngle * dy2,\n      y1 = -sinAngle * dx2 + cosAngle * dy2,\n      x1_sq = x1 * x1,\n      y1_sq = y1 * y1,\n      radiiCheck = x1_sq / (rx * rx) + y1_sq / (ry * ry);\n\n  if (radiiCheck > 1) {\n    rx = _sqrt(radiiCheck) * rx;\n    ry = _sqrt(radiiCheck) * ry;\n  }\n\n  var rx_sq = rx * rx,\n      ry_sq = ry * ry,\n      sq = (rx_sq * ry_sq - rx_sq * y1_sq - ry_sq * x1_sq) / (rx_sq * y1_sq + ry_sq * x1_sq);\n\n  if (sq < 0) {\n    sq = 0;\n  }\n\n  var coef = (largeArcFlag === sweepFlag ? -1 : 1) * _sqrt(sq),\n      cx1 = coef * (rx * y1 / ry),\n      cy1 = coef * -(ry * x1 / rx),\n      sx2 = (lastX + x) / 2,\n      sy2 = (lastY + y) / 2,\n      cx = sx2 + (cosAngle * cx1 - sinAngle * cy1),\n      cy = sy2 + (sinAngle * cx1 + cosAngle * cy1),\n      ux = (x1 - cx1) / rx,\n      uy = (y1 - cy1) / ry,\n      vx = (-x1 - cx1) / rx,\n      vy = (-y1 - cy1) / ry,\n      temp = ux * ux + uy * uy,\n      angleStart = (uy < 0 ? -1 : 1) * Math.acos(ux / _sqrt(temp)),\n      angleExtent = (ux * vy - uy * vx < 0 ? -1 : 1) * Math.acos((ux * vx + uy * vy) / _sqrt(temp * (vx * vx + vy * vy)));\n\n  isNaN(angleExtent) && (angleExtent = PI); //rare edge case. Math.cos(-1) is NaN.\n\n  if (!sweepFlag && angleExtent > 0) {\n    angleExtent -= TWOPI;\n  } else if (sweepFlag && angleExtent < 0) {\n    angleExtent += TWOPI;\n  }\n\n  angleStart %= TWOPI;\n  angleExtent %= TWOPI;\n\n  var segments = Math.ceil(_abs(angleExtent) / (TWOPI / 4)),\n      rawPath = [],\n      angleIncrement = angleExtent / segments,\n      controlLength = 4 / 3 * _sin(angleIncrement / 2) / (1 + _cos(angleIncrement / 2)),\n      ma = cosAngle * rx,\n      mb = sinAngle * rx,\n      mc = sinAngle * -ry,\n      md = cosAngle * ry,\n      i;\n\n  for (i = 0; i < segments; i++) {\n    angle = angleStart + i * angleIncrement;\n    x1 = _cos(angle);\n    y1 = _sin(angle);\n    ux = _cos(angle += angleIncrement);\n    uy = _sin(angle);\n    rawPath.push(x1 - controlLength * y1, y1 + controlLength * x1, ux + controlLength * uy, uy - controlLength * ux, ux, uy);\n  } //now transform according to the actual size of the ellipse/arc (the beziers were noramlized, between 0 and 1 on a circle).\n\n\n  for (i = 0; i < rawPath.length; i += 2) {\n    x1 = rawPath[i];\n    y1 = rawPath[i + 1];\n    rawPath[i] = x1 * ma + y1 * mc + cx;\n    rawPath[i + 1] = x1 * mb + y1 * md + cy;\n  }\n\n  rawPath[i - 2] = x; //always set the end to exactly where it's supposed to be\n\n  rawPath[i - 1] = y;\n  return rawPath;\n} //Spits back a RawPath with absolute coordinates. Each segment starts with a \"moveTo\" command (x coordinate, then y) and then 2 control points (x, y, x, y), then anchor. The goal is to minimize memory and maximize speed.\n\n\nexport function stringToRawPath(d) {\n  var a = (d + \"\").replace(_scientific, function (m) {\n    var n = +m;\n    return n < 0.0001 && n > -0.0001 ? 0 : n;\n  }).match(_svgPathExp) || [],\n      //some authoring programs spit out very small numbers in scientific notation like \"1e-5\", so make sure we round that down to 0 first.\n  path = [],\n      relativeX = 0,\n      relativeY = 0,\n      twoThirds = 2 / 3,\n      elements = a.length,\n      points = 0,\n      errorMessage = \"ERROR: malformed path: \" + d,\n      i,\n      j,\n      x,\n      y,\n      command,\n      isRelative,\n      segment,\n      startX,\n      startY,\n      difX,\n      difY,\n      beziers,\n      prevCommand,\n      flag1,\n      flag2,\n      line = function line(sx, sy, ex, ey) {\n    difX = (ex - sx) / 3;\n    difY = (ey - sy) / 3;\n    segment.push(sx + difX, sy + difY, ex - difX, ey - difY, ex, ey);\n  };\n\n  if (!d || !isNaN(a[0]) || isNaN(a[1])) {\n    console.log(errorMessage);\n    return path;\n  }\n\n  for (i = 0; i < elements; i++) {\n    prevCommand = command;\n\n    if (isNaN(a[i])) {\n      command = a[i].toUpperCase();\n      isRelative = command !== a[i]; //lower case means relative\n    } else {\n      //commands like \"C\" can be strung together without any new command characters between.\n      i--;\n    }\n\n    x = +a[i + 1];\n    y = +a[i + 2];\n\n    if (isRelative) {\n      x += relativeX;\n      y += relativeY;\n    }\n\n    if (!i) {\n      startX = x;\n      startY = y;\n    } // \"M\" (move)\n\n\n    if (command === \"M\") {\n      if (segment) {\n        if (segment.length < 8) {\n          //if the path data was funky and just had a M with no actual drawing anywhere, skip it.\n          path.length -= 1;\n        } else {\n          points += segment.length;\n        }\n      }\n\n      relativeX = startX = x;\n      relativeY = startY = y;\n      segment = [x, y];\n      path.push(segment);\n      i += 2;\n      command = \"L\"; //an \"M\" with more than 2 values gets interpreted as \"lineTo\" commands (\"L\").\n      // \"C\" (cubic bezier)\n    } else if (command === \"C\") {\n      if (!segment) {\n        segment = [0, 0];\n      }\n\n      if (!isRelative) {\n        relativeX = relativeY = 0;\n      } //note: \"*1\" is just a fast/short way to cast the value as a Number. WAAAY faster in Chrome, slightly slower in Firefox.\n\n\n      segment.push(x, y, relativeX + a[i + 3] * 1, relativeY + a[i + 4] * 1, relativeX += a[i + 5] * 1, relativeY += a[i + 6] * 1);\n      i += 6; // \"S\" (continuation of cubic bezier)\n    } else if (command === \"S\") {\n      difX = relativeX;\n      difY = relativeY;\n\n      if (prevCommand === \"C\" || prevCommand === \"S\") {\n        difX += relativeX - segment[segment.length - 4];\n        difY += relativeY - segment[segment.length - 3];\n      }\n\n      if (!isRelative) {\n        relativeX = relativeY = 0;\n      }\n\n      segment.push(difX, difY, x, y, relativeX += a[i + 3] * 1, relativeY += a[i + 4] * 1);\n      i += 4; // \"Q\" (quadratic bezier)\n    } else if (command === \"Q\") {\n      difX = relativeX + (x - relativeX) * twoThirds;\n      difY = relativeY + (y - relativeY) * twoThirds;\n\n      if (!isRelative) {\n        relativeX = relativeY = 0;\n      }\n\n      relativeX += a[i + 3] * 1;\n      relativeY += a[i + 4] * 1;\n      segment.push(difX, difY, relativeX + (x - relativeX) * twoThirds, relativeY + (y - relativeY) * twoThirds, relativeX, relativeY);\n      i += 4; // \"T\" (continuation of quadratic bezier)\n    } else if (command === \"T\") {\n      difX = relativeX - segment[segment.length - 4];\n      difY = relativeY - segment[segment.length - 3];\n      segment.push(relativeX + difX, relativeY + difY, x + (relativeX + difX * 1.5 - x) * twoThirds, y + (relativeY + difY * 1.5 - y) * twoThirds, relativeX = x, relativeY = y);\n      i += 2; // \"H\" (horizontal line)\n    } else if (command === \"H\") {\n      line(relativeX, relativeY, relativeX = x, relativeY);\n      i += 1; // \"V\" (vertical line)\n    } else if (command === \"V\") {\n      //adjust values because the first (and only one) isn't x in this case, it's y.\n      line(relativeX, relativeY, relativeX, relativeY = x + (isRelative ? relativeY - relativeX : 0));\n      i += 1; // \"L\" (line) or \"Z\" (close)\n    } else if (command === \"L\" || command === \"Z\") {\n      if (command === \"Z\") {\n        x = startX;\n        y = startY;\n        segment.closed = true;\n      }\n\n      if (command === \"L\" || _abs(relativeX - x) > 0.5 || _abs(relativeY - y) > 0.5) {\n        line(relativeX, relativeY, x, y);\n\n        if (command === \"L\") {\n          i += 2;\n        }\n      }\n\n      relativeX = x;\n      relativeY = y; // \"A\" (arc)\n    } else if (command === \"A\") {\n      flag1 = a[i + 4];\n      flag2 = a[i + 5];\n      difX = a[i + 6];\n      difY = a[i + 7];\n      j = 7;\n\n      if (flag1.length > 1) {\n        // for cases when the flags are merged, like \"a8 8 0 018 8\" (the 0 and 1 flags are WITH the x value of 8, but it could also be \"a8 8 0 01-8 8\" so it may include x or not)\n        if (flag1.length < 3) {\n          difY = difX;\n          difX = flag2;\n          j--;\n        } else {\n          difY = flag2;\n          difX = flag1.substr(2);\n          j -= 2;\n        }\n\n        flag2 = flag1.charAt(1);\n        flag1 = flag1.charAt(0);\n      }\n\n      beziers = arcToSegment(relativeX, relativeY, +a[i + 1], +a[i + 2], +a[i + 3], +flag1, +flag2, (isRelative ? relativeX : 0) + difX * 1, (isRelative ? relativeY : 0) + difY * 1);\n      i += j;\n\n      if (beziers) {\n        for (j = 0; j < beziers.length; j++) {\n          segment.push(beziers[j]);\n        }\n      }\n\n      relativeX = segment[segment.length - 2];\n      relativeY = segment[segment.length - 1];\n    } else {\n      console.log(errorMessage);\n    }\n  }\n\n  i = segment.length;\n\n  if (i < 6) {\n    //in case there's odd SVG like a M0,0 command at the very end.\n    path.pop();\n    i = 0;\n  } else if (segment[0] === segment[i - 2] && segment[1] === segment[i - 1]) {\n    segment.closed = true;\n  }\n\n  path.totalPoints = points + i;\n  return path;\n} //populates the points array in alternating x/y values (like [x, y, x, y...] instead of individual point objects [{x, y}, {x, y}...] to conserve memory and stay in line with how we're handling segment arrays\n\nexport function bezierToPoints(x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {\n  var x12 = (x1 + x2) / 2,\n      y12 = (y1 + y2) / 2,\n      x23 = (x2 + x3) / 2,\n      y23 = (y2 + y3) / 2,\n      x34 = (x3 + x4) / 2,\n      y34 = (y3 + y4) / 2,\n      x123 = (x12 + x23) / 2,\n      y123 = (y12 + y23) / 2,\n      x234 = (x23 + x34) / 2,\n      y234 = (y23 + y34) / 2,\n      x1234 = (x123 + x234) / 2,\n      y1234 = (y123 + y234) / 2,\n      dx = x4 - x1,\n      dy = y4 - y1,\n      d2 = _abs((x2 - x4) * dy - (y2 - y4) * dx),\n      d3 = _abs((x3 - x4) * dy - (y3 - y4) * dx),\n      length;\n\n  if (!points) {\n    points = [x1, y1, x4, y4];\n    index = 2;\n  }\n\n  points.splice(index || points.length - 2, 0, x1234, y1234);\n\n  if ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {\n    length = points.length;\n    bezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index);\n    bezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 2 + (points.length - length));\n  }\n\n  return points;\n}\n/*\nfunction getAngleBetweenPoints(x0, y0, x1, y1, x2, y2) { //angle between 3 points in radians\n\tvar dx1 = x1 - x0,\n\t\tdy1 = y1 - y0,\n\t\tdx2 = x2 - x1,\n\t\tdy2 = y2 - y1,\n\t\tdx3 = x2 - x0,\n\t\tdy3 = y2 - y0,\n\t\ta = dx1 * dx1 + dy1 * dy1,\n\t\tb = dx2 * dx2 + dy2 * dy2,\n\t\tc = dx3 * dx3 + dy3 * dy3;\n\treturn Math.acos( (a + b - c) / _sqrt(4 * a * b) );\n},\n*/\n//pointsToSegment() doesn't handle flat coordinates (where y is always 0) the way we need (the resulting control points are always right on top of the anchors), so this function basically makes the control points go directly up and down, varying in length based on the curviness (more curvy, further control points)\n\nexport function flatPointsToSegment(points, curviness) {\n  if (curviness === void 0) {\n    curviness = 1;\n  }\n\n  var x = points[0],\n      y = 0,\n      segment = [x, y],\n      i = 2;\n\n  for (; i < points.length; i += 2) {\n    segment.push(x, y, points[i], y = (points[i] - x) * curviness / 2, x = points[i], -y);\n  }\n\n  return segment;\n} //points is an array of x/y points, like [x, y, x, y, x, y]\n\nexport function pointsToSegment(points, curviness, cornerThreshold) {\n  //points = simplifyPoints(points, tolerance);\n  var l = points.length - 2,\n      x = +points[0],\n      y = +points[1],\n      nextX = +points[2],\n      nextY = +points[3],\n      segment = [x, y, x, y],\n      dx2 = nextX - x,\n      dy2 = nextY - y,\n      closed = Math.abs(points[l] - x) < 0.001 && Math.abs(points[l + 1] - y) < 0.001,\n      prevX,\n      prevY,\n      angle,\n      slope,\n      i,\n      dx1,\n      dx3,\n      dy1,\n      dy3,\n      d1,\n      d2,\n      a,\n      b,\n      c;\n\n  if (isNaN(cornerThreshold)) {\n    cornerThreshold = Math.PI / 10;\n  }\n\n  if (closed) {\n    // if the start and end points are basically on top of each other, close the segment by adding the 2nd point to the end, and the 2nd-to-last point to the beginning (we'll remove them at the end, but this allows the curvature to look perfect)\n    points.push(nextX, nextY);\n    nextX = x;\n    nextY = y;\n    x = points[l - 2];\n    y = points[l - 1];\n    points.unshift(x, y);\n    l += 4;\n  }\n\n  curviness = curviness || curviness === 0 ? +curviness : 1;\n\n  for (i = 2; i < l; i += 2) {\n    prevX = x;\n    prevY = y;\n    x = nextX;\n    y = nextY;\n    nextX = +points[i + 2];\n    nextY = +points[i + 3];\n    dx1 = dx2;\n    dy1 = dy2;\n    dx2 = nextX - x;\n    dy2 = nextY - y;\n    dx3 = nextX - prevX;\n    dy3 = nextY - prevY;\n    a = dx1 * dx1 + dy1 * dy1;\n    b = dx2 * dx2 + dy2 * dy2;\n    c = dx3 * dx3 + dy3 * dy3;\n    angle = Math.acos((a + b - c) / _sqrt(4 * a * b)); //angle between the 3 points\n\n    d2 = angle / Math.PI * curviness; //temporary precalculation for speed (reusing d2 variable)\n\n    d1 = _sqrt(a) * d2; //the tighter the angle, the shorter we make the handles in proportion.\n\n    d2 *= _sqrt(b);\n\n    if (x !== prevX || y !== prevY) {\n      if (angle > cornerThreshold) {\n        slope = _atan2(dy3, dx3);\n        segment.push(_round(x - _cos(slope) * d1), //first control point\n        _round(y - _sin(slope) * d1), _round(x), //anchor\n        _round(y), _round(x + _cos(slope) * d2), //second control point\n        _round(y + _sin(slope) * d2));\n      } else {\n        slope = _atan2(dy1, dx1);\n        segment.push(_round(x - _cos(slope) * d1), //first control point\n        _round(y - _sin(slope) * d1));\n        slope = _atan2(dy2, dx2);\n        segment.push(_round(x), //anchor\n        _round(y), _round(x + _cos(slope) * d2), //second control point\n        _round(y + _sin(slope) * d2));\n      }\n    }\n  }\n\n  segment.push(_round(nextX), _round(nextY), _round(nextX), _round(nextY));\n\n  if (closed) {\n    segment.splice(0, 6);\n    segment.length = segment.length - 6;\n  }\n\n  return segment;\n} //returns the squared distance between an x/y coordinate and a segment between x1/y1 and x2/y2\n\nfunction pointToSegDist(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1,\n      dy = y2 - y1,\n      t;\n\n  if (dx || dy) {\n    t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n\n  return Math.pow(x - x1, 2) + Math.pow(y - y1, 2);\n}\n\nfunction simplifyStep(points, first, last, tolerance, simplified) {\n  var maxSqDist = tolerance,\n      firstX = points[first],\n      firstY = points[first + 1],\n      lastX = points[last],\n      lastY = points[last + 1],\n      index,\n      i,\n      d;\n\n  for (i = first + 2; i < last; i += 2) {\n    d = pointToSegDist(points[i], points[i + 1], firstX, firstY, lastX, lastY);\n\n    if (d > maxSqDist) {\n      index = i;\n      maxSqDist = d;\n    }\n  }\n\n  if (maxSqDist > tolerance) {\n    if (index - first > 2) {\n      simplifyStep(points, first, index, tolerance, simplified);\n    }\n\n    simplified.push(points[index], points[index + 1]);\n\n    if (last - index > 2) {\n      simplifyStep(points, index, last, tolerance, simplified);\n    }\n  }\n} //points is an array of x/y values like [x, y, x, y, x, y]\n\n\nexport function simplifyPoints(points, tolerance) {\n  var prevX = parseFloat(points[0]),\n      prevY = parseFloat(points[1]),\n      temp = [prevX, prevY],\n      l = points.length - 2,\n      i,\n      x,\n      y,\n      dx,\n      dy,\n      result,\n      last;\n  tolerance = Math.pow(tolerance || 1, 2);\n\n  for (i = 2; i < l; i += 2) {\n    x = parseFloat(points[i]);\n    y = parseFloat(points[i + 1]);\n    dx = prevX - x;\n    dy = prevY - y;\n\n    if (dx * dx + dy * dy > tolerance) {\n      temp.push(x, y);\n      prevX = x;\n      prevY = y;\n    }\n  }\n\n  temp.push(parseFloat(points[l]), parseFloat(points[l + 1]));\n  last = temp.length - 2;\n  result = [temp[0], temp[1]];\n  simplifyStep(temp, 0, last, tolerance, result);\n  result.push(temp[last], temp[last + 1]);\n  return result;\n}\n\nfunction getClosestProgressOnBezier(iterations, px, py, start, end, slices, x0, y0, x1, y1, x2, y2, x3, y3) {\n  var inc = (end - start) / slices,\n      best = 0,\n      t = start,\n      x,\n      y,\n      d,\n      dx,\n      dy,\n      inv;\n  _bestDistance = _largeNum;\n\n  while (t <= end) {\n    inv = 1 - t;\n    x = inv * inv * inv * x0 + 3 * inv * inv * t * x1 + 3 * inv * t * t * x2 + t * t * t * x3;\n    y = inv * inv * inv * y0 + 3 * inv * inv * t * y1 + 3 * inv * t * t * y2 + t * t * t * y3;\n    dx = x - px;\n    dy = y - py;\n    d = dx * dx + dy * dy;\n\n    if (d < _bestDistance) {\n      _bestDistance = d;\n      best = t;\n    }\n\n    t += inc;\n  }\n\n  return iterations > 1 ? getClosestProgressOnBezier(iterations - 1, px, py, Math.max(best - inc, 0), Math.min(best + inc, 1), slices, x0, y0, x1, y1, x2, y2, x3, y3) : best;\n}\n\nexport function getClosestData(rawPath, x, y, slices) {\n  //returns an object with the closest j, i, and t (j is the segment index, i is the index of the point in that segment, and t is the time/progress along that bezier)\n  var closest = {\n    j: 0,\n    i: 0,\n    t: 0\n  },\n      bestDistance = _largeNum,\n      i,\n      j,\n      t,\n      segment;\n\n  for (j = 0; j < rawPath.length; j++) {\n    segment = rawPath[j];\n\n    for (i = 0; i < segment.length; i += 6) {\n      t = getClosestProgressOnBezier(1, x, y, 0, 1, slices || 20, segment[i], segment[i + 1], segment[i + 2], segment[i + 3], segment[i + 4], segment[i + 5], segment[i + 6], segment[i + 7]);\n\n      if (bestDistance > _bestDistance) {\n        bestDistance = _bestDistance;\n        closest.j = j;\n        closest.i = i;\n        closest.t = t;\n      }\n    }\n  }\n\n  return closest;\n} //subdivide a Segment closest to a specific x,y coordinate\n\nexport function subdivideSegmentNear(x, y, segment, slices, iterations) {\n  var l = segment.length,\n      bestDistance = _largeNum,\n      bestT = 0,\n      bestSegmentIndex = 0,\n      t,\n      i;\n  slices = slices || 20;\n  iterations = iterations || 3;\n\n  for (i = 0; i < l; i += 6) {\n    t = getClosestProgressOnBezier(1, x, y, 0, 1, slices, segment[i], segment[i + 1], segment[i + 2], segment[i + 3], segment[i + 4], segment[i + 5], segment[i + 6], segment[i + 7]);\n\n    if (bestDistance > _bestDistance) {\n      bestDistance = _bestDistance;\n      bestT = t;\n      bestSegmentIndex = i;\n    }\n  }\n\n  t = getClosestProgressOnBezier(iterations, x, y, bestT - 0.05, bestT + 0.05, slices, segment[bestSegmentIndex], segment[bestSegmentIndex + 1], segment[bestSegmentIndex + 2], segment[bestSegmentIndex + 3], segment[bestSegmentIndex + 4], segment[bestSegmentIndex + 5], segment[bestSegmentIndex + 6], segment[bestSegmentIndex + 7]);\n  subdivideSegment(segment, bestSegmentIndex, t);\n  return bestSegmentIndex + 6;\n}\n/*\nTakes any of the following and converts it to an all Cubic Bezier SVG data string:\n- A <path> data string like \"M0,0 L2,4 v20,15 H100\"\n- A RawPath, like [[x, y, x, y, x, y, x, y][[x, y, x, y, x, y, x, y]]\n- A Segment, like [x, y, x, y, x, y, x, y]\n\nNote: all numbers are rounded down to the closest 0.001 to minimize memory, maximize speed, and avoid odd numbers like 1e-13\n*/\n\nexport function rawPathToString(rawPath) {\n  if (_isNumber(rawPath[0])) {\n    //in case a segment is passed in instead\n    rawPath = [rawPath];\n  }\n\n  var result = \"\",\n      l = rawPath.length,\n      sl,\n      s,\n      i,\n      segment;\n\n  for (s = 0; s < l; s++) {\n    segment = rawPath[s];\n    result += \"M\" + _round(segment[0]) + \",\" + _round(segment[1]) + \" C\";\n    sl = segment.length;\n\n    for (i = 2; i < sl; i++) {\n      result += _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i++]) + \" \" + _round(segment[i++]) + \",\" + _round(segment[i]) + \" \";\n    }\n\n    if (segment.closed) {\n      result += \"z\";\n    }\n  }\n\n  return result;\n}\n/*\n// takes a segment with coordinates [x, y, x, y, ...] and converts the control points into angles and lengths [x, y, angle, length, angle, length, x, y, angle, length, ...] so that it animates more cleanly and avoids odd breaks/kinks. For example, if you animate from 1 o'clock to 6 o'clock, it'd just go directly/linearly rather than around. So the length would be very short in the middle of the tween.\nexport function cpCoordsToAngles(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tx, y, i;\n\tfor (i = 0; i < segment.length; i+=6) {\n\t\tx = segment[i+2] - segment[i];\n\t\ty = segment[i+3] - segment[i+1];\n\t\tresult[i+2] = Math.atan2(y, x);\n\t\tresult[i+3] = Math.sqrt(x * x + y * y);\n\t\tx = segment[i+6] - segment[i+4];\n\t\ty = segment[i+7] - segment[i+5];\n\t\tresult[i+4] = Math.atan2(y, x);\n\t\tresult[i+5] = Math.sqrt(x * x + y * y);\n\t}\n\treturn result;\n}\n\n// takes a segment that was converted with cpCoordsToAngles() to have angles and lengths instead of coordinates for the control points, and converts it BACK into coordinates.\nexport function cpAnglesToCoords(segment, copy) {\n\tvar result = copy ? segment.slice(0) : segment,\n\t\tlength = segment.length,\n\t\trnd = 1000,\n\t\tangle, l, i, j;\n\tfor (i = 0; i < length; i+=6) {\n\t\tangle = segment[i+2];\n\t\tl = segment[i+3]; //length\n\t\tresult[i+2] = (((segment[i] + Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+3] = (((segment[i+1] + Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t\tangle = segment[i+4];\n\t\tl = segment[i+5]; //length\n\t\tresult[i+4] = (((segment[i+6] - Math.cos(angle) * l) * rnd) | 0) / rnd;\n\t\tresult[i+5] = (((segment[i+7] - Math.sin(angle) * l) * rnd) | 0) / rnd;\n\t}\n\treturn result;\n}\n\n//adds an \"isSmooth\" array to each segment and populates it with a boolean value indicating whether or not it's smooth (the control points have basically the same slope). For any smooth control points, it converts the coordinates into angle (x, in radians) and length (y) and puts them into the same index value in a smoothData array.\nexport function populateSmoothData(rawPath) {\n\tlet j = rawPath.length,\n\t\tsmooth, segment, x, y, x2, y2, i, l, a, a2, isSmooth, smoothData;\n\twhile (--j > -1) {\n\t\tsegment = rawPath[j];\n\t\tisSmooth = segment.isSmooth = segment.isSmooth || [0, 0, 0, 0];\n\t\tsmoothData = segment.smoothData = segment.smoothData || [0, 0, 0, 0];\n\t\tisSmooth.length = 4;\n\t\tl = segment.length - 2;\n\t\tfor (i = 6; i < l; i += 6) {\n\t\t\tx = segment[i] - segment[i - 2];\n\t\t\ty = segment[i + 1] - segment[i - 1];\n\t\t\tx2 = segment[i + 2] - segment[i];\n\t\t\ty2 = segment[i + 3] - segment[i + 1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tsmooth = (Math.abs(a - a2) < 0.09);\n\t\t\tif (smooth) {\n\t\t\t\tsmoothData[i - 2] = a;\n\t\t\t\tsmoothData[i + 2] = a2;\n\t\t\t\tsmoothData[i - 1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[i + 3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t}\n\t\t\tisSmooth.push(smooth, smooth, 0, 0, smooth, smooth);\n\t\t}\n\t\t//if the first and last points are identical, check to see if there's a smooth transition. We must handle this a bit differently due to their positions in the array.\n\t\tif (segment[l] === segment[0] && segment[l+1] === segment[1]) {\n\t\t\tx = segment[0] - segment[l-2];\n\t\t\ty = segment[1] - segment[l-1];\n\t\t\tx2 = segment[2] - segment[0];\n\t\t\ty2 = segment[3] - segment[1];\n\t\t\ta = _atan2(y, x);\n\t\t\ta2 = _atan2(y2, x2);\n\t\t\tif (Math.abs(a - a2) < 0.09) {\n\t\t\t\tsmoothData[l-2] = a;\n\t\t\t\tsmoothData[2] = a2;\n\t\t\t\tsmoothData[l-1] = _sqrt(x * x + y * y);\n\t\t\t\tsmoothData[3] = _sqrt(x2 * x2 + y2 * y2);\n\t\t\t\tisSmooth[l-2] = isSmooth[l-1] = true; //don't change indexes 2 and 3 because we'll trigger everything from the END, and this will optimize file size a bit.\n\t\t\t}\n\t\t}\n\t}\n\treturn rawPath;\n}\nexport function pointToScreen(svgElement, point) {\n\tif (arguments.length < 2) { //by default, take the first set of coordinates in the path as the point\n\t\tlet rawPath = getRawPath(svgElement);\n\t\tpoint = svgElement.ownerSVGElement.createSVGPoint();\n\t\tpoint.x = rawPath[0][0];\n\t\tpoint.y = rawPath[0][1];\n\t}\n\treturn point.matrixTransform(svgElement.getScreenCTM());\n}\n\n*/","/*!\n * CustomEase 3.4.0\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nimport { stringToRawPath, rawPathToString, transformRawPath } from \"./utils/paths.js\";\n\nvar gsap,\n    _coreInitted,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _initCore = function _initCore() {\n  gsap = _getGSAP();\n\n  if (gsap) {\n    gsap.registerEase(\"_CE\", CustomEase.create);\n    _coreInitted = 1;\n  } else {\n    console.warn(\"Please gsap.registerPlugin(CustomEase)\");\n  }\n},\n    _bigNum = 1e20,\n    _round = function _round(value) {\n  return ~~(value * 1000 + (value < 0 ? -.5 : .5)) / 1000;\n},\n    _bonusValidated = 1,\n    //<name>CustomEase</name>\n_numExp = /[-+=\\.]*\\d+[\\.e\\-\\+]*\\d*[e\\-\\+]*\\d*/gi,\n    //finds any numbers, including ones that start with += or -=, negative numbers, and ones in scientific notation like 1e-8.\n_needsParsingExp = /[cLlsSaAhHvVtTqQ]/g,\n    _findMinimum = function _findMinimum(values) {\n  var l = values.length,\n      min = _bigNum,\n      i;\n\n  for (i = 1; i < l; i += 6) {\n    if (+values[i] < min) {\n      min = +values[i];\n    }\n  }\n\n  return min;\n},\n    //takes all the points and translates/scales them so that the x starts at 0 and ends at 1.\n_normalize = function _normalize(values, height, originY) {\n  if (!originY && originY !== 0) {\n    originY = Math.max(+values[values.length - 1], +values[1]);\n  }\n\n  var tx = +values[0] * -1,\n      ty = -originY,\n      l = values.length,\n      sx = 1 / (+values[l - 2] + tx),\n      sy = -height || (Math.abs(+values[l - 1] - +values[1]) < 0.01 * (+values[l - 2] - +values[0]) ? _findMinimum(values) + ty : +values[l - 1] + ty),\n      i;\n\n  if (sy) {\n    //typically y ends at 1 (so that the end values are reached)\n    sy = 1 / sy;\n  } else {\n    //in case the ease returns to its beginning value, scale everything proportionally\n    sy = -sx;\n  }\n\n  for (i = 0; i < l; i += 2) {\n    values[i] = (+values[i] + tx) * sx;\n    values[i + 1] = (+values[i + 1] + ty) * sy;\n  }\n},\n    //note that this function returns point objects like {x, y} rather than working with segments which are arrays with alternating x, y values as in the similar function in paths.js\n_bezierToPoints = function _bezierToPoints(x1, y1, x2, y2, x3, y3, x4, y4, threshold, points, index) {\n  var x12 = (x1 + x2) / 2,\n      y12 = (y1 + y2) / 2,\n      x23 = (x2 + x3) / 2,\n      y23 = (y2 + y3) / 2,\n      x34 = (x3 + x4) / 2,\n      y34 = (y3 + y4) / 2,\n      x123 = (x12 + x23) / 2,\n      y123 = (y12 + y23) / 2,\n      x234 = (x23 + x34) / 2,\n      y234 = (y23 + y34) / 2,\n      x1234 = (x123 + x234) / 2,\n      y1234 = (y123 + y234) / 2,\n      dx = x4 - x1,\n      dy = y4 - y1,\n      d2 = Math.abs((x2 - x4) * dy - (y2 - y4) * dx),\n      d3 = Math.abs((x3 - x4) * dy - (y3 - y4) * dx),\n      length;\n\n  if (!points) {\n    points = [{\n      x: x1,\n      y: y1\n    }, {\n      x: x4,\n      y: y4\n    }];\n    index = 1;\n  }\n\n  points.splice(index || points.length - 1, 0, {\n    x: x1234,\n    y: y1234\n  });\n\n  if ((d2 + d3) * (d2 + d3) > threshold * (dx * dx + dy * dy)) {\n    length = points.length;\n\n    _bezierToPoints(x1, y1, x12, y12, x123, y123, x1234, y1234, threshold, points, index);\n\n    _bezierToPoints(x1234, y1234, x234, y234, x34, y34, x4, y4, threshold, points, index + 1 + (points.length - length));\n  }\n\n  return points;\n};\n\nexport var CustomEase = /*#__PURE__*/function () {\n  function CustomEase(id, data, config) {\n    if (!_coreInitted) {\n      _initCore();\n    }\n\n    this.id = id;\n\n    if (_bonusValidated) {\n      this.setData(data, config);\n    }\n  }\n\n  var _proto = CustomEase.prototype;\n\n  _proto.setData = function setData(data, config) {\n    config = config || {};\n    data = data || \"0,0,1,1\";\n    var values = data.match(_numExp),\n        closest = 1,\n        points = [],\n        lookup = [],\n        precision = config.precision || 1,\n        fast = precision <= 1,\n        l,\n        a1,\n        a2,\n        i,\n        inc,\n        j,\n        point,\n        prevPoint,\n        p;\n    this.data = data;\n\n    if (_needsParsingExp.test(data) || ~data.indexOf(\"M\") && data.indexOf(\"C\") < 0) {\n      values = stringToRawPath(data)[0];\n    }\n\n    l = values.length;\n\n    if (l === 4) {\n      values.unshift(0, 0);\n      values.push(1, 1);\n      l = 8;\n    } else if ((l - 2) % 6) {\n      throw \"Invalid CustomEase\";\n    }\n\n    if (+values[0] !== 0 || +values[l - 2] !== 1) {\n      _normalize(values, config.height, config.originY);\n    }\n\n    this.segment = values;\n\n    for (i = 2; i < l; i += 6) {\n      a1 = {\n        x: +values[i - 2],\n        y: +values[i - 1]\n      };\n      a2 = {\n        x: +values[i + 4],\n        y: +values[i + 5]\n      };\n      points.push(a1, a2);\n\n      _bezierToPoints(a1.x, a1.y, +values[i], +values[i + 1], +values[i + 2], +values[i + 3], a2.x, a2.y, 1 / (precision * 200000), points, points.length - 1);\n    }\n\n    l = points.length;\n\n    for (i = 0; i < l; i++) {\n      point = points[i];\n      prevPoint = points[i - 1] || point;\n\n      if (point.x > prevPoint.x || prevPoint.y !== point.y && prevPoint.x === point.x || point === prevPoint) {\n        //if a point goes BACKWARD in time or is a duplicate, just drop it.\n        prevPoint.cx = point.x - prevPoint.x; //change in x between this point and the next point (performance optimization)\n\n        prevPoint.cy = point.y - prevPoint.y;\n        prevPoint.n = point;\n        prevPoint.nx = point.x; //next point's x value (performance optimization, making lookups faster in getRatio()). Remember, the lookup will always land on a spot where it's either this point or the very next one (never beyond that)\n\n        if (fast && i > 1 && Math.abs(prevPoint.cy / prevPoint.cx - points[i - 2].cy / points[i - 2].cx) > 2) {\n          //if there's a sudden change in direction, prioritize accuracy over speed. Like a bounce ease - you don't want to risk the sampling chunks landing on each side of the bounce anchor and having it clipped off.\n          fast = 0;\n        }\n\n        if (prevPoint.cx < closest) {\n          if (!prevPoint.cx) {\n            prevPoint.cx = 0.001; //avoids math problems in getRatio() (dividing by zero)\n\n            if (i === l - 1) {\n              //in case the final segment goes vertical RIGHT at the end, make sure we end at the end.\n              prevPoint.x -= 0.001;\n              closest = Math.min(closest, 0.001);\n              fast = 0;\n            }\n          } else {\n            closest = prevPoint.cx;\n          }\n        }\n      } else {\n        points.splice(i--, 1);\n        l--;\n      }\n    }\n\n    l = 1 / closest + 1 | 0;\n    inc = 1 / l;\n    j = 0;\n    point = points[0];\n\n    if (fast) {\n      for (i = 0; i < l; i++) {\n        //for fastest lookups, we just sample along the path at equal x (time) distance. Uses more memory and is slightly less accurate for anchors that don't land on the sampling points, but for the vast majority of eases it's excellent (and fast).\n        p = i * inc;\n\n        if (point.nx < p) {\n          point = points[++j];\n        }\n\n        a1 = point.y + (p - point.x) / point.cx * point.cy;\n        lookup[i] = {\n          x: p,\n          cx: inc,\n          y: a1,\n          cy: 0,\n          nx: 9\n        };\n\n        if (i) {\n          lookup[i - 1].cy = a1 - lookup[i - 1].y;\n        }\n      }\n\n      lookup[l - 1].cy = points[points.length - 1].y - a1;\n    } else {\n      //this option is more accurate, ensuring that EVERY anchor is hit perfectly. Clipping across a bounce, for example, would never happen.\n      for (i = 0; i < l; i++) {\n        //build a lookup table based on the smallest distance so that we can instantly find the appropriate point (well, it'll either be that point or the very next one). We'll look up based on the linear progress. So it's it's 0.5 and the lookup table has 100 elements, it'd be like lookup[Math.floor(0.5 * 100)]\n        if (point.nx < i * inc) {\n          point = points[++j];\n        }\n\n        lookup[i] = point;\n      }\n\n      if (j < points.length - 1) {\n        lookup[i - 1] = points[points.length - 2];\n      }\n    } //this._calcEnd = (points[points.length-1].y !== 1 || points[0].y !== 0); //ensures that we don't run into floating point errors. As long as we're starting at 0 and ending at 1, tell GSAP to skip the final calculation and use 0/1 as the factor.\n\n\n    this.ease = function (p) {\n      var point = lookup[p * l | 0] || lookup[l - 1];\n\n      if (point.nx < p) {\n        point = point.n;\n      }\n\n      return point.y + (p - point.x) / point.cx * point.cy;\n    };\n\n    this.ease.custom = this;\n\n    if (this.id) {\n      gsap.registerEase(this.id, this.ease);\n    }\n\n    return this;\n  };\n\n  _proto.getSVGData = function getSVGData(config) {\n    return CustomEase.getSVGData(this, config);\n  };\n\n  CustomEase.create = function create(id, data, config) {\n    return new CustomEase(id, data, config).ease;\n  };\n\n  CustomEase.register = function register(core) {\n    gsap = core;\n\n    _initCore();\n  };\n\n  CustomEase.get = function get(id) {\n    return gsap.parseEase(id);\n  };\n\n  CustomEase.getSVGData = function getSVGData(ease, config) {\n    config = config || {};\n    var width = config.width || 100,\n        height = config.height || 100,\n        x = config.x || 0,\n        y = (config.y || 0) + height,\n        e = gsap.utils.toArray(config.path)[0],\n        a,\n        slope,\n        i,\n        inc,\n        tx,\n        ty,\n        precision,\n        threshold,\n        prevX,\n        prevY;\n\n    if (config.invert) {\n      height = -height;\n      y = 0;\n    }\n\n    if (typeof ease === \"string\") {\n      ease = gsap.parseEase(ease);\n    }\n\n    if (ease.custom) {\n      ease = ease.custom;\n    }\n\n    if (ease instanceof CustomEase) {\n      a = rawPathToString(transformRawPath([ease.segment], width, 0, 0, -height, x, y));\n    } else {\n      a = [x, y];\n      precision = Math.max(5, (config.precision || 1) * 200);\n      inc = 1 / precision;\n      precision += 2;\n      threshold = 5 / precision;\n      prevX = _round(x + inc * width);\n      prevY = _round(y + ease(inc) * -height);\n      slope = (prevY - y) / (prevX - x);\n\n      for (i = 2; i < precision; i++) {\n        tx = _round(x + i * inc * width);\n        ty = _round(y + ease(i * inc) * -height);\n\n        if (Math.abs((ty - prevY) / (tx - prevX) - slope) > threshold || i === precision - 1) {\n          //only add points when the slope changes beyond the threshold\n          a.push(prevX, prevY);\n          slope = (ty - prevY) / (tx - prevX);\n        }\n\n        prevX = tx;\n        prevY = ty;\n      }\n\n      a = \"M\" + a.join(\",\");\n    }\n\n    if (e) {\n      e.setAttribute(\"d\", a);\n    }\n\n    return a;\n  };\n\n  return CustomEase;\n}();\n_getGSAP() && gsap.registerPlugin(CustomEase);\nCustomEase.version = \"3.4.0\";\nexport { CustomEase as default };","export const constants = {\n  isDevice: false,\n};\n\nexport const instances = {\n  scroll: undefined,\n  slider: undefined,\n};\n","import gsap from 'gsap';\nimport { CustomEase } from 'gsap/CustomEase';\n\nimport { constants, instances } from '../../store';\n\ngsap.registerPlugin(CustomEase);\n\nCustomEase.create('in-out-smooth', 'M0,0 C0.8,0 0.2,1 1,1');\n\nclass Placeholders {\n  constructor() {\n    this.dom = {};\n    \n    this.state = {\n      animating: false,\n      scrollEnabled: false\n    };\n  }\n\n  setExpandAnimation() {\n    setTimeout(() => { // set timeout to make sure x position is set (parallax)\n      instances.slider.open();\n    }, 100);\n  }\n\n  enableScroll() {\n    if(!constants.isDevice && !this.state.scrollEnabled) {\n      instances.scroll.enable();\n      this.state.scrollEnabled = true;\n    }\n  }\n\n  disableScroll() {\n    this.state.scrollEnabled = false;\n    instances.scroll.disable();\n\n  }\n\n  handleClick = () => {\n    if (this.state.animating) return;\n\n    this.state.animating = true;\n\n    this.setExpandAnimation();\n  }\n\n  addListeners() {\n    \n  }\n\n  init() {\n    this.handleClick();\n  }\n}\n\nexport default Placeholders;","import gsap from 'gsap';\nimport { CustomEase } from 'gsap/CustomEase';\n\nimport { constants, instances } from '../../store';\n\ngsap.registerPlugin(CustomEase);\n\nCustomEase.create('in-out-smooth', 'M0,0 C0.8,0 0.2,1 1,1');\n\nclass Slider {\n  constructor() {\n    this.dom = {};\n    this.dom.el = document.querySelector('.js-slider');\n    this.dom.container = this.dom.el.querySelector('.js-container');\n    this.dom.items = this.dom.el.querySelectorAll('.js-item');\n    this.dom.images = this.dom.el.querySelectorAll('.js-img-wrap');\n    this.dom.headings = this.dom.el.querySelectorAll('.js-heading');\n    this.dom.content = document.querySelector('.js-content');\n\n    this.state = {\n      open: false,\n      scrollEnabled: false,\n      progress: 0,\n    };\n  }\n\n  setCache() {\n    this.items = [];\n    [...this.dom.items].forEach((el) => {\n      const bounds = el.getBoundingClientRect();\n\n      this.items.push({\n        img: el.querySelector('img'),\n        bounds,\n        x: 0,\n      });\n    });\n  }\n\n  render = () => {\n    if (constants.isDevice) return;\n\n    const scrollLast = Math.abs(instances.scroll.state.last);\n\n    this.items.forEach((item) => {\n      const { bounds } = item;\n      const inView = scrollLast + window.innerWidth >= bounds.left && scrollLast < bounds.right;\n\n      if (inView) {\n        const min = bounds.left - window.innerWidth;\n        const max = bounds.right;\n        const percentage = ((scrollLast - min) * 100) / (max - min);\n        const newMin = -(window.innerWidth / 12) * 3;\n        const newMax = 0;\n        item.x = ((percentage - 0) / (100 - 0)) * (newMax - newMin) + newMin;\n\n        item.img.style.transform = `translate3d(${item.x}px, 0, 0) scale(1.75)`;\n      }\n    });\n\n    if (this.state.scrollEnabled) {\n      const min = 0;\n      const max = -instances.scroll.state.bounds.width + window.innerWidth;\n      this.state.progress = ((instances.scroll.state.last - min) * 100) / (max - min) / 100;\n    }\n  }\n\n  open = () => {\n    if (this.state.open) return;\n\n    const tl = gsap.timeline({ paused: true });\n\n    tl\n      .addLabel('start')\n\n      .set(this.dom.el, { autoAlpha: 1 })\n\n      .call(() => {\n        // reset scroll position\n        if (constants.isDevice) {\n          this.dom.container.scrollLeft = 0;\n        } else {\n          instances.scroll.state.current = 0;\n          instances.scroll.state.last = 0;\n        }\n\n        this.state.scrollEnabled = true;\n      })\n\n    tl.play();\n\n    this.state.open = true;\n  }\n\n  close = () => {\n    if (!this.state.open) return;\n\n    instances.scroll.disable();\n    this.state.scrollEnabled = false;\n\n    const { top, height } = this.dom.items[0].getBoundingClientRect();\n    const y = window.innerHeight - top - height + height;\n\n    const tl = gsap.timeline({ paused: true, onComplete: () => {\n      if (!constants.isDevice) {\n        // reset scroll position\n        instances.scroll.state.current = 0;\n        instances.scroll.state.last = 0;\n        this.state.progress = 0;\n      } else {\n        this.dom.container.scrollLeft = 0;\n      }\n    } });\n\n    tl.addLabel('start');\n\n    tl\n      .to(this.dom.items, { duration: 1.8, stagger: { each: 0.03, from: 'center' }, ease: 'in-out-smooth', autoAlpha: 0, y })\n      .to(this.dom.content, { duration: 0.8, autoAlpha: 1 }, 'start+=1.1')\n      .set(this.dom.items, { y: 0 })\n      .set(this.dom.el, { autoAlpha: 0 });\n\n    tl.play();\n\n    this.state.open = false;\n  }\n\n  handleResize = () => {\n    this.setCache();\n  }\n\n  addListeners() {\n    window.addEventListener('resize', this.handleResize);\n  }\n\n  init() {\n    gsap.ticker.add(this.render);\n    this.setCache();\n    this.addListeners();\n  }\n}\n\nexport default Slider;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","// Generated by CoffeeScript 1.9.2\n(function() {\n  var root;\n\n  root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n\n  root.Lethargy = (function() {\n    function Lethargy(stability, sensitivity, tolerance, delay) {\n      this.stability = stability != null ? Math.abs(stability) : 8;\n      this.sensitivity = sensitivity != null ? 1 + Math.abs(sensitivity) : 100;\n      this.tolerance = tolerance != null ? 1 + Math.abs(tolerance) : 1.1;\n      this.delay = delay != null ? delay : 150;\n      this.lastUpDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.lastDownDeltas = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n      this.deltasTimestamp = (function() {\n        var i, ref, results;\n        results = [];\n        for (i = 1, ref = this.stability * 2; 1 <= ref ? i <= ref : i >= ref; 1 <= ref ? i++ : i--) {\n          results.push(null);\n        }\n        return results;\n      }).call(this);\n    }\n\n    Lethargy.prototype.check = function(e) {\n      var lastDelta;\n      e = e.originalEvent || e;\n      if (e.wheelDelta != null) {\n        lastDelta = e.wheelDelta;\n      } else if (e.deltaY != null) {\n        lastDelta = e.deltaY * -40;\n      } else if ((e.detail != null) || e.detail === 0) {\n        lastDelta = e.detail * -40;\n      }\n      this.deltasTimestamp.push(Date.now());\n      this.deltasTimestamp.shift();\n      if (lastDelta > 0) {\n        this.lastUpDeltas.push(lastDelta);\n        this.lastUpDeltas.shift();\n        return this.isInertia(1);\n      } else {\n        this.lastDownDeltas.push(lastDelta);\n        this.lastDownDeltas.shift();\n        return this.isInertia(-1);\n      }\n      return false;\n    };\n\n    Lethargy.prototype.isInertia = function(direction) {\n      var lastDeltas, lastDeltasNew, lastDeltasOld, newAverage, newSum, oldAverage, oldSum;\n      lastDeltas = direction === -1 ? this.lastDownDeltas : this.lastUpDeltas;\n      if (lastDeltas[0] === null) {\n        return direction;\n      }\n      if (this.deltasTimestamp[(this.stability * 2) - 2] + this.delay > Date.now() && lastDeltas[0] === lastDeltas[(this.stability * 2) - 1]) {\n        return false;\n      }\n      lastDeltasOld = lastDeltas.slice(0, this.stability);\n      lastDeltasNew = lastDeltas.slice(this.stability, this.stability * 2);\n      oldSum = lastDeltasOld.reduce(function(t, s) {\n        return t + s;\n      });\n      newSum = lastDeltasNew.reduce(function(t, s) {\n        return t + s;\n      });\n      oldAverage = oldSum / lastDeltasOld.length;\n      newAverage = newSum / lastDeltasNew.length;\n      if (Math.abs(oldAverage) < Math.abs(newAverage * this.tolerance) && (this.sensitivity < Math.abs(newAverage))) {\n        return direction;\n      } else {\n        return false;\n      }\n    };\n\n    Lethargy.prototype.showLastUpDeltas = function() {\n      return this.lastUpDeltas;\n    };\n\n    Lethargy.prototype.showLastDownDeltas = function() {\n      return this.lastDownDeltas;\n    };\n\n    return Lethargy;\n\n  })();\n\n}).call(this);\n","'use strict';\n\nmodule.exports = (function getSupport() {\n    return {\n        hasWheelEvent: 'onwheel' in document,\n        hasMouseWheelEvent: 'onmousewheel' in document,\n        hasTouch: ('ontouchstart' in window) || window.TouchEvent || window.DocumentTouch && document instanceof DocumentTouch,\n        hasTouchWin: navigator.msMaxTouchPoints && navigator.msMaxTouchPoints > 1,\n        hasPointer: !!window.navigator.msPointerEnabled,\n        hasKeyDown: 'onkeydown' in document,\n        isFirefox: navigator.userAgent.indexOf('Firefox') > -1\n    };\n})();\n","'use strict';\n\nmodule.exports = function(source) {\n    return JSON.parse(JSON.stringify(source));\n};","'use strict';\n\nvar toString = Object.prototype.toString,\n    hasOwnProperty = Object.prototype.hasOwnProperty;\n\nmodule.exports = function(object) {\n    if(!object) return console.warn('bindAll requires at least one argument.');\n\n    var functions = Array.prototype.slice.call(arguments, 1);\n\n    if (functions.length === 0) {\n\n        for (var method in object) {\n            if(hasOwnProperty.call(object, method)) {\n                if(typeof object[method] == 'function' && toString.call(object[method]) == \"[object Function]\") {\n                    functions.push(method);\n                }\n            }\n        }\n    }\n\n    for(var i = 0; i < functions.length; i++) {\n        var f = functions[i];\n        object[f] = bind(object[f], object);\n    }\n};\n\n/*\n    Faster bind without specific-case checking. (see https://coderwall.com/p/oi3j3w).\n    bindAll is only needed for events binding so no need to make slow fixes for constructor\n    or partial application.\n*/\nfunction bind(func, context) {\n  return function() {\n    return func.apply(context, arguments);\n  };\n}","'use strict';\n\nvar objectAssign = require('object-assign');\nvar Emitter = require('tiny-emitter');\nvar Lethargy = require('lethargy').Lethargy;\nvar support = require('./support');\nvar clone = require('./clone');\nvar bindAll = require('bindall-standalone');\nvar EVT_ID = 'virtualscroll';\n\nmodule.exports = VirtualScroll;\n\nvar keyCodes = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SPACE: 32\n};\n\nfunction VirtualScroll(options) {\n    bindAll(this, '_onWheel', '_onMouseWheel', '_onTouchStart', '_onTouchMove', '_onKeyDown');\n\n    this.el = window;\n    if (options && options.el) {\n        this.el = options.el;\n        delete options.el;\n    }\n    this.options = objectAssign({\n        mouseMultiplier: 1,\n        touchMultiplier: 2,\n        firefoxMultiplier: 15,\n        keyStep: 120,\n        preventTouch: false,\n        unpreventTouchClass: 'vs-touchmove-allowed',\n        limitInertia: false,\n        useKeyboard: true,\n        useTouch: true\n    }, options);\n\n    if (this.options.limitInertia) this._lethargy = new Lethargy();\n\n    this._emitter = new Emitter();\n    this._event = {\n        y: 0,\n        x: 0,\n        deltaX: 0,\n        deltaY: 0\n    };\n    this.touchStartX = null;\n    this.touchStartY = null;\n    this.bodyTouchAction = null;\n\n    if (this.options.passive !== undefined) {\n        this.listenerOptions = {passive: this.options.passive};\n    }\n}\n\nVirtualScroll.prototype._notify = function(e) {\n    var evt = this._event;\n    evt.x += evt.deltaX;\n    evt.y += evt.deltaY;\n\n   this._emitter.emit(EVT_ID, {\n        x: evt.x,\n        y: evt.y,\n        deltaX: evt.deltaX,\n        deltaY: evt.deltaY,\n        originalEvent: e\n   });\n};\n\nVirtualScroll.prototype._onWheel = function(e) {\n    var options = this.options;\n    if (this._lethargy && this._lethargy.check(e) === false) return;\n    var evt = this._event;\n\n    // In Chrome and in Firefox (at least the new one)\n    evt.deltaX = e.wheelDeltaX || e.deltaX * -1;\n    evt.deltaY = e.wheelDeltaY || e.deltaY * -1;\n\n    // for our purpose deltamode = 1 means user is on a wheel mouse, not touch pad\n    // real meaning: https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent#Delta_modes\n    if(support.isFirefox && e.deltaMode == 1) {\n        evt.deltaX *= options.firefoxMultiplier;\n        evt.deltaY *= options.firefoxMultiplier;\n    }\n\n    evt.deltaX *= options.mouseMultiplier;\n    evt.deltaY *= options.mouseMultiplier;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onMouseWheel = function(e) {\n    if (this.options.limitInertia && this._lethargy.check(e) === false) return;\n\n    var evt = this._event;\n\n    // In Safari, IE and in Chrome if 'wheel' isn't defined\n    evt.deltaX = (e.wheelDeltaX) ? e.wheelDeltaX : 0;\n    evt.deltaY = (e.wheelDeltaY) ? e.wheelDeltaY : e.wheelDelta;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onTouchStart = function(e) {\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n};\n\nVirtualScroll.prototype._onTouchMove = function(e) {\n    var options = this.options;\n    if(options.preventTouch\n        && !e.target.classList.contains(options.unpreventTouchClass)) {\n        e.preventDefault();\n    }\n\n    var evt = this._event;\n\n    var t = (e.targetTouches) ? e.targetTouches[0] : e;\n\n    evt.deltaX = (t.pageX - this.touchStartX) * options.touchMultiplier;\n    evt.deltaY = (t.pageY - this.touchStartY) * options.touchMultiplier;\n\n    this.touchStartX = t.pageX;\n    this.touchStartY = t.pageY;\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._onKeyDown = function(e) {\n    var evt = this._event;\n    evt.deltaX = evt.deltaY = 0;\n    var windowHeight = window.innerHeight - 40\n\n    switch(e.keyCode) {\n        case keyCodes.LEFT:\n        case keyCodes.UP:\n            evt.deltaY = this.options.keyStep;\n            break;\n\n        case keyCodes.RIGHT:\n        case keyCodes.DOWN:\n            evt.deltaY = - this.options.keyStep;\n            break;\n        case keyCodes.SPACE && e.shiftKey:\n            evt.deltaY = windowHeight;\n            break;\n        case keyCodes.SPACE:\n            evt.deltaY = - windowHeight;\n            break;\n        default:\n            return;\n    }\n\n    this._notify(e);\n};\n\nVirtualScroll.prototype._bind = function() {\n    if(support.hasWheelEvent) this.el.addEventListener('wheel', this._onWheel, this.listenerOptions);\n    if(support.hasMouseWheelEvent) this.el.addEventListener('mousewheel', this._onMouseWheel, this.listenerOptions);\n\n    if(support.hasTouch && this.options.useTouch) {\n        this.el.addEventListener('touchstart', this._onTouchStart, this.listenerOptions);\n        this.el.addEventListener('touchmove', this._onTouchMove, this.listenerOptions);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        this.bodyTouchAction = document.body.style.msTouchAction;\n        document.body.style.msTouchAction = 'none';\n        this.el.addEventListener('MSPointerDown', this._onTouchStart, true);\n        this.el.addEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown && this.options.useKeyboard) document.addEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype._unbind = function() {\n    if(support.hasWheelEvent) this.el.removeEventListener('wheel', this._onWheel);\n    if(support.hasMouseWheelEvent) this.el.removeEventListener('mousewheel', this._onMouseWheel);\n\n    if(support.hasTouch) {\n        this.el.removeEventListener('touchstart', this._onTouchStart);\n        this.el.removeEventListener('touchmove', this._onTouchMove);\n    }\n\n    if(support.hasPointer && support.hasTouchWin) {\n        document.body.style.msTouchAction = this.bodyTouchAction;\n        this.el.removeEventListener('MSPointerDown', this._onTouchStart, true);\n        this.el.removeEventListener('MSPointerMove', this._onTouchMove, true);\n    }\n\n    if(support.hasKeyDown && this.options.useKeyboard) document.removeEventListener('keydown', this._onKeyDown);\n};\n\nVirtualScroll.prototype.on = function(cb, ctx) {\n  this._emitter.on(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (events && events[EVT_ID] && events[EVT_ID].length === 1) this._bind();\n};\n\nVirtualScroll.prototype.off = function(cb, ctx) {\n  this._emitter.off(EVT_ID, cb, ctx);\n\n  var events = this._emitter.e;\n  if (!events[EVT_ID] || events[EVT_ID].length <= 0) this._unbind();\n};\n\nVirtualScroll.prototype.reset = function() {\n    var evt = this._event;\n    evt.x = 0;\n    evt.y = 0;\n};\n\nVirtualScroll.prototype.destroy = function() {\n    this._emitter.off();\n    this._unbind();\n};\n","export const lerp = (a, b, n) => (1 - n) * a + n * b;\nexport const clamp = (val, min, max) => Math.max(Math.min(val, min), max);","import VirtualScroll from 'virtual-scroll';\nimport { gsap } from 'gsap';\n\nimport { lerp, clamp } from './math';\nimport { constants } from '../store';\n\nexport default class Scroll {\n  constructor() {\n    this.vs = new VirtualScroll();\n    this.vs.options.mouseMultiplier = 0.45;\n\n    this.dom = {\n      container: document.querySelector('[data-scroll]')\n    };\n\n    this.options = {\n      ease: 0.1,\n      dragSpeed: 1.5,\n    };\n\n    this.state = {\n      bounds: {},\n      current: 0,\n      last: 0,\n      dragStart: 0,\n      dragEnd: 0,\n    };\n  }\n\n  smooth = () => {\n    this.state.last = lerp(this.state.last, this.state.current, this.options.ease);\n    this.dom.container.style.transform = `translate3d(${this.state.last}px, 0, 0)`;\n  }\n\n  native = () => {\n    this.state.current = this.dom.container.scrollLeft;\n    this.state.last = lerp(this.state.last, this.state.current, this.options.ease);\n  }\n\n  calc = (e) => {\n    this.state.current += e.deltaY;\n    this.state.current = Math.max((this.state.bounds.width - window.innerWidth) * -1, this.state.current);\n    this.state.current = Math.min(0, this.state.current);\n  }\n\n  enable() {\n    if (!constants.isDevice) {\n      this.vs.on(this.calc);\n      gsap.ticker.add(this.smooth);\n    } else {\n      gsap.ticker.add(this.native);\n    }\n  }\n\n  disable() {\n    if (!constants.isDevice) {\n      this.vs.off(this.calc);\n      gsap.ticker.remove(this.smooth);\n    } else {\n      gsap.ticker.remove(this.native);\n    }\n  }\n\n  handleMouseup = () => {\n    this.state.dragging = false;\n    this.state.dragEnd = this.state.current;\n\n    document.body.classList.remove('is-dragging');\n  }\n\n  handleMousedown = (e) => {\n    this.state.dragging = true;\n\n    this.state.dragEnd = this.state.current;\n    this.state.dragStart = e.clientX;\n\n    document.body.classList.add('is-dragging');\n  }\n\n  handleMousemove = (e) => {\n    if (!this.state.dragging) return;\n\n    this.state.current = this.state.dragEnd + ((e.clientX - this.state.dragStart) * this.options.dragSpeed);\n    this.state.current = clamp(this.state.current, 0, -this.state.bounds.width + window.innerWidth);\n  }\n\n  handleMouseleave = () => {\n    this.state.dragging = false;\n    this.state.dragEnd = this.state.current;\n\n    document.body.classList.remove('is-dragging');\n  }\n\n  handleResize = () => {\n    this.state.bounds = this.dom.container.getBoundingClientRect();\n  }\n\n  addListeners() {\n    window.addEventListener('resize', this.handleResize, { passive: true });\n\n    if (!constants.isDevice) {\n      this.dom.container.addEventListener('mouseup', this.handleMouseup);\n      this.dom.container.addEventListener('mousedown', this.handleMousedown);\n      this.dom.container.addEventListener('mouseleave', this.handleMouseleave);\n      this.dom.container.addEventListener('mousemove', this.handleMousemove);\n    }\n  }\n\n  removeListeners() {\n    window.removeEventListener('resize', this.handleResize, { passive: true });\n\n    if (!constants.isDevice) {\n      this.dom.container.removeEventListener('mouseup', this.handleMouseup);\n      this.dom.container.removeEventListener('mousedown', this.handleMousedown);\n      this.dom.container.removeEventListener('mouseleave', this.handleMouseleave);\n      this.dom.container.removeEventListener('mousemove', this.handleMousemove);\n    }\n  }\n\n  init() {\n    if (constants.isDevice) {\n      this.handleResize();\n      this.vs.destroy();\n      gsap.ticker.add(this.native);\n    }\n\n    if (!constants.isDevice) {\n      this.handleResize();\n      this.vs.on(this.calc);\n      gsap.ticker.add(this.smooth);\n      this.addListeners();\n      this.disable();\n    }\n  }\n\n  destroy() {\n    if (!constants.isDevice) {\n      this.disable();\n      this.vs.destroy();\n      this.removeListeners();\n    }\n  }\n}","import Placeholders from \"../../components/placeholders/placeholders\";\nimport Slider from \"../../components/slider/slider\";\nimport Scroll from \"../../utils/scroll\";\nimport { constants, instances } from \"../../store\";\n\nfunction startGalleryAnimation() {\n  constants.isDevice = \"ontouchstart\" in window;\n  constants.isDevice && document.body.classList.add(\"is-device\");\n\n  // set vh css var\n  document.documentElement.style.setProperty(\n    \"--vh\",\n    `${window.innerHeight * 0.01}px`\n  );\n\n  instances.scroll = new Scroll();\n  instances.scroll.init();\n\n  const placeholders = new Placeholders();\n  placeholders.init();\n\n  instances.slider = new Slider();\n  instances.slider.init();\n\n  document.querySelector(\".slider\").addEventListener(\"mouseenter\", function () {\n    placeholders.enableScroll();\n    document.addEventListener(\"wheel\", scrollHandler, { passive: false });\n  });\n\n  document.querySelector(\".slider\").addEventListener(\"mouseleave\", function () {\n    placeholders.disableScroll();\n    document.removeEventListener(\"wheel\", scrollHandler);\n  });\n\n  function scrollHandler(evt) {\n    evt.preventDefault();\n  }\n}\n\nexport { startGalleryAnimation };\n"]}